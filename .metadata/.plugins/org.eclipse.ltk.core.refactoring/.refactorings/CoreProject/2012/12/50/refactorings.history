<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename package &apos;analyzer&apos; to &apos;org.yudin.analyzer&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Original element: &apos;CoreProject/src/analyzer&apos;&#x0A;- Renamed element: &apos;CoreProject/src/org.yudin.analyzer&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;analyzer&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;analyzer" name="org.yudin.analyzer" qualified="false" references="true" stamp="1354878929385" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.yudin.analyzer.AnalysisResult.wordsMathCount&apos; in &apos;org.yudin.analyzer.AnalysisResult&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Original element: &apos;org.yudin.analyzer.AnalysisResult.wordsMathCount&apos;&#x0A;- Getter method name: &apos;getWordsMathCount&apos;&#x0A;- Setter method name: &apos;setWordsMathCount&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;wordsMathCount&apos;" flags="589830" getter="getWordsMathCount" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.yudin.analyzer{AnalysisResult.java[AnalysisResult^wordsMathCount" insertion="-1" setter="setWordsMathCount" stamp="1354879030318" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.yudin.analyzer.AnalysisResult.wordsAllCount&apos; in &apos;org.yudin.analyzer.AnalysisResult&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Original element: &apos;org.yudin.analyzer.AnalysisResult.wordsAllCount&apos;&#x0A;- Getter method name: &apos;getWordsAllCount&apos;&#x0A;- Setter method name: &apos;setWordsAllCount&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;wordsAllCount&apos;" flags="589830" getter="getWordsAllCount" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.yudin.analyzer{AnalysisResult.java[AnalysisResult^wordsAllCount" insertion="1" setter="setWordsAllCount" stamp="1354879034195" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.yudin.analyzer.Analyzer.minimalWordLength&apos; in &apos;org.yudin.analyzer.Analyzer&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Original element: &apos;org.yudin.analyzer.Analyzer.minimalWordLength&apos;&#x0A;- Getter method name: &apos;getMinimalWordLength&apos;&#x0A;- Setter method name: &apos;setMinimalWordLength&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;minimalWordLength&apos;" flags="589830" getter="getMinimalWordLength" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.yudin.analyzer{Analyzer.java[Analyzer^minimalWordLength" insertion="2" setter="setMinimalWordLength" stamp="1354880305305" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Extract method &apos;private boolean itsWord(String word)&apos; from &apos;org.yudin.analyzer.Analyzer.analysisText()&apos; to &apos;org.yudin.analyzer.Analyzer&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Method name: &apos;itsWord&apos;&#x0A;- Destination type: &apos;org.yudin.analyzer.Analyzer&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;itsWord&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.yudin.analyzer{Analyzer.java" name="itsWord" replace="false" selection="664 33" stamp="1354880825109" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Move 5 elements to &apos;CoreProject/tests/org.yudin.tests&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Destination element: &apos;CoreProject/tests/org.yudin.tests&apos;&#x0A;- Original elements:&#x0A;     StandartVacabularyFactoryTest.java&#x0A;     AnalyzerTest.java&#x0A;     AllTests.java&#x0A;     StandartVacabularyTest.java&#x0A;     SubstringVacabularyTest.java&#x0A;- Update references to refactored element" description="Move compilation units" destination="/tests&lt;org.yudin.tests" element1="/tests&lt;{StandartVacabularyFactoryTest.java" element2="/tests&lt;{AnalyzerTest.java" element3="/tests&lt;{AllTests.java" element4="/tests&lt;{StandartVacabularyTest.java" element5="/tests&lt;{SubstringVacabularyTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1354903372296" units="5" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;resultTesTFile&apos; to &apos;texts&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Destination element: &apos;texts&apos;&#x0A;- Original element: &apos;resultTesTFile&apos;&#x0A;- Update references to refactored element" description="Move file" element1="resultTesTFile" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1354905959745" target="texts" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename resource &apos;CoreProject/texts/resultTesTFile&apos; to &apos;standartVacabulary&apos;" description="Rename resource &apos;resultTesTFile&apos;" flags="7" id="org.eclipse.ltk.core.refactoring.rename.resource" input="texts/resultTesTFile" name="standartVacabulary" stamp="1354905971546" updateReferences="true"/>&#x0A;<refactoring comment="Extract constant &apos;STANDART_VACABULARY_PATH&apos; from expression &apos;&quot;./texts/standartVacabulary&quot;&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Constant name: &apos;STANDART_VACABULARY_PATH&apos;&#x0A;- Constant expression: &apos;&quot;./texts/standartVacabulary&quot;&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of expression with constant" description="Extract constant &apos;STANDART_VACABULARY_PATH&apos;" flags="786432" id="org.eclipse.jdt.ui.extract.constant" input="/tests&lt;org.yudin.tests.samples{SampleCheckAllTestFiles.java" name="STANDART_VACABULARY_PATH" qualify="false" replace="true" selection="629 28" stamp="1354906584544" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;public double getRatio()&apos; from &apos;org.yudin.analyzer.AnalysisResult.check()&apos; to &apos;org.yudin.analyzer.AnalysisResult&apos;&#x0A;- Original project: &apos;CoreProject&apos;&#x0A;- Method name: &apos;getRatio&apos;&#x0A;- Destination type: &apos;org.yudin.analyzer.AnalysisResult&apos;&#x0A;- Declared visibility: &apos;public&apos;" comments="false" description="Extract method &apos;getRatio&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;org.yudin.analyzer{AnalysisResult.java" name="getRatio" replace="false" selection="329 64" stamp="1354907074042" version="1.0" visibility="1"/>
</session>